{"version":3,"sources":["components/ComponentA.js","components/ComponentD.js","components/ComponentB.js","components/ComponentF.js","components/ComponentE.js","components/ComponentC.js","App.js","index.js"],"names":["ComponentA","countContext","useContext","CountContext","className","onClick","countDispatch","ComponentD","ComponentB","ComponentF","ComponentE","ComponentC","createContext","reducer","state","action","App","useReducer","count","dispatch","Provider","value","countState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8JAqBeA,MAlBf,WACG,IAAMC,EAAeC,qBAAWC,GAChC,OACG,yBAAKC,UAAU,SACZ,wBAAIA,UAAU,SAAd,eACA,4BAAQC,QAAS,kBAAMJ,EAAaK,cAAc,eAAlD,aAGA,4BAAQD,QAAS,kBAAMJ,EAAaK,cAAc,eAAlD,aAGA,4BAAQD,QAAS,kBAAMJ,EAAaK,cAAc,WAAlD,WCOMC,MAlBf,WACG,IAAMN,EAAeC,qBAAWC,GAChC,OACG,yBAAKC,UAAU,SACZ,wBAAIA,UAAU,SAAd,eACA,4BAAQC,QAAS,kBAAMJ,EAAaK,cAAc,eAAlD,aAGA,4BAAQD,QAAS,kBAAMJ,EAAaK,cAAc,eAAlD,aAGA,4BAAQD,QAAS,kBAAMJ,EAAaK,cAAc,WAAlD,WCHME,MARf,WACG,OACG,6BACG,kBAAC,EAAD,QCeMC,MAlBf,WACG,IAAMR,EAAeC,qBAAWC,GAChC,OACG,yBAAKC,UAAU,SACZ,wBAAIA,UAAU,SAAd,eACA,4BAAQC,QAAS,kBAAMJ,EAAaK,cAAc,eAAlD,aAGA,4BAAQD,QAAS,kBAAMJ,EAAaK,cAAc,eAAlD,aAGA,4BAAQD,QAAS,kBAAMJ,EAAaK,cAAc,WAAlD,WCHMI,MARf,WACG,OACG,6BACG,kBAAC,EAAD,QCKMC,MARf,WACG,OACG,6BACG,kBAAC,EAAD,QCAIR,EAAeS,0BAMtBC,EAAU,SAACC,EAAOC,GACrB,OAAQA,GACL,IAAK,YACF,OAAOD,EAAQ,EAClB,IAAK,YACF,OAAOA,EAAQ,EAClB,IAAK,QACF,OAVY,EAWf,QACG,OAAOA,IA0BDE,MAtBf,WAAgB,IAAD,EACcC,qBAAWJ,EAjBnB,GAgBN,mBACLK,EADK,KACEC,EADF,KAGZ,OACG,kBAAChB,EAAaiB,SAAd,CACGC,MAAO,CAAEC,WAAYJ,EAAOZ,cAAea,IAE3C,8BACG,yBAAKf,UAAU,aACZ,uDACA,yBAAKA,UAAU,SAAf,YAAiCc,GACjC,yBAAKd,UAAU,cACZ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,WClClBmB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.9a94f983.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport { CountContext } from '../App';\r\n\r\nfunction ComponentA() {\r\n   const countContext = useContext(CountContext);\r\n   return (\r\n      <div className='board'>\r\n         <h4 className='title'>component A</h4>\r\n         <button onClick={() => countContext.countDispatch('increment')}>\r\n            Increment\r\n         </button>\r\n         <button onClick={() => countContext.countDispatch('decrement')}>\r\n            Decrement\r\n         </button>\r\n         <button onClick={() => countContext.countDispatch('reset')}>\r\n            Reset\r\n         </button>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ComponentA;\r\n","import React, { useContext } from 'react';\r\nimport { CountContext } from '../App';\r\n\r\nfunction ComponentD() {\r\n   const countContext = useContext(CountContext);\r\n   return (\r\n      <div className='board'>\r\n         <h4 className='title'>component D</h4>\r\n         <button onClick={() => countContext.countDispatch('increment')}>\r\n            Increment\r\n         </button>\r\n         <button onClick={() => countContext.countDispatch('decrement')}>\r\n            Decrement\r\n         </button>\r\n         <button onClick={() => countContext.countDispatch('reset')}>\r\n            Reset\r\n         </button>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ComponentD;\r\n","import React from 'react';\r\nimport ComponentD from './ComponentD';\r\n\r\nfunction ComponentB() {\r\n   return (\r\n      <div>\r\n         <ComponentD />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ComponentB;\r\n","import React, { useContext } from 'react';\r\nimport { CountContext } from '../App';\r\n\r\nfunction ComponentF() {\r\n   const countContext = useContext(CountContext);\r\n   return (\r\n      <div className='board'>\r\n         <h4 className='title'>component F</h4>\r\n         <button onClick={() => countContext.countDispatch('increment')}>\r\n            Increment\r\n         </button>\r\n         <button onClick={() => countContext.countDispatch('decrement')}>\r\n            Decrement\r\n         </button>\r\n         <button onClick={() => countContext.countDispatch('reset')}>\r\n            Reset\r\n         </button>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ComponentF;\r\n","import React from 'react';\r\nimport ComponentF from './ComponentF';\r\n\r\nfunction ComponentE() {\r\n   return (\r\n      <div>\r\n         <ComponentF />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ComponentE;\r\n","import React from 'react';\r\nimport ComponentE from './ComponentE';\r\n\r\nfunction ComponentC() {\r\n   return (\r\n      <div>\r\n         <ComponentE />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ComponentC;\r\n","import React, { useReducer, createContext } from 'react';\nimport ComponentA from './components/ComponentA';\nimport ComponentB from './components/ComponentB';\nimport ComponentC from './components/ComponentC';\n\n//create context\nexport const CountContext = createContext();\n\n//define initial state\nconst initialState = 0;\n\n//define reducer function\nconst reducer = (state, action) => {\n   switch (action) {\n      case 'increment':\n         return state + 1;\n      case 'decrement':\n         return state - 1;\n      case 'reset':\n         return initialState;\n      default:\n         return state;\n   }\n};\n\nfunction App() {\n   const [count, dispatch] = useReducer(reducer, initialState);\n\n   return (\n      <CountContext.Provider\n         value={{ countState: count, countDispatch: dispatch }}\n      >\n         <main>\n            <div className='container'>\n               <h3>useReducer & useContext</h3>\n               <div className='count'> Count - {count}</div>\n               <div className='components'>\n                  <ComponentA />\n                  <ComponentB />\n                  <ComponentC />\n               </div>\n            </div>\n         </main>\n      </CountContext.Provider>\n   );\n}\n\nexport default App;\n\n/*\nCombining useReducer with useContext to manage Global state\n=============================================================\nWe will maintain a count state (created with useReducer) in App.js and access the state from components A, D and F\n\nSteps\n- Setup components structure\n- Create counter in App.js with useReducer\n- Access counter in components A, D and F\n\n */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}